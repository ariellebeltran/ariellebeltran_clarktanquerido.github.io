<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Billboard Charts Slider</title>
    <style>
        .slider-container {
            position: relative;
            width: 600px;
        }

        .slider-ticks {
            display: flex;
            justify-content: space-between;
            position: absolute;
            top: 20px;
            width: 100%;
        }

        .slider-tick {
            font-size: 12px;
            text-align: center;
        }

        #yearSlider {
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="slideshowContainer"></div>
    <div class="slider-container">
        <input type="range" id="yearSlider">
        <div class="slider-ticks"></div>
    </div>
    <div id="currentYear"></div>
    
    <script src="https://cdn.jsdelivr.net/npm/vega@5.20.2"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite@5.1.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-embed@6.18.2"></script>
    <script>
        async function loadBillboard100Charts() {
            const popArtists = [
                'Miley Cyrus', 'Taylor Swift', 'Taylor Swift feat. Kendrick Lamar', 'Dua Lipa', 'Olivia Rodrigo',
                'Ariana Grande', 'Ed Sheeran', 'Harry Styles', 'Billie Eilish',
                'The Weeknd', 'Bruno Mars', 'Camila Cabello', 'Justin Bieber',
                'Post Malone', 'Mark Ronson', 'Sam Smith', 'Meghan Trainor', 'Adele', 'Post Malone, Swae Lee'
            ];

            const yearsData = [
                {
                    year: 2023, data: [
                        { "rank": 1, "song": "Last Night", "artist": "Morgan Wallen" },
                        { "rank": 2, "song": "Flowers", "artist": "Miley Cyrus" },
                        { "rank": 3, "song": "Kill Bill", "artist": "SZA" },
                        { "rank": 4, "song": "Anti-Hero", "artist": "Taylor Swift" },
                        { "rank": 5, "song": "Creepin'", "artist": "Metro Boomin, The Weeknd, 21 Savage" },
                    ]
                },
                // Add other year data similarly...
            ];

            const slideshowContainer = document.getElementById('slideshowContainer');

            yearsData.forEach((yearData, index) => {
                yearData.data.forEach(song => {
                    song.pop = popArtists.includes(song.artist);
                });

                const chartDiv = document.createElement('div');
                chartDiv.classList.add('chart');
                chartDiv.id = `chart-${yearData.year}`;
                slideshowContainer.appendChild(chartDiv);

                const vlSpec = {
                    "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                    "data": { "values": yearData.data },
                    "title": `Top 5 Most Streamed Songs on Billboard Hot 100 in ${yearData.year}`,
                    "mark": "bar",
                    width: 600,
                    height: 400,
                    "encoding": {
                        "y": { "field": "song", "type": "nominal", "sort": "x", "title": "Song" },
                        "x": {
                            "field": "rank",
                            "type": "quantitative",
                            "title": "Rank",
                            "scale": { "domain": [0, 5], "nice": true },
                            "axis": { "grid": true, "format": "d" }
                        },
                        "color": {
                            "field": "pop",
                            "type": "nominal",
                            "legend": {
                                "title": "Song Type",
                                "values": [true, false], 
                                "labelExpr": "datum.value ? 'Pop' : 'Other Genres'"
                            },
                            "scale": {
                                "domain": [true, false], 
                                "range": ["#ff320e", "#D3D3D3"]
                            }
                        },
                        "tooltip": [
                            { "field": "song", "type": "nominal", "title": "Song" },
                            { "field": "artist", "type": "nominal", "title": "Artist" },
                            { "field": "rank", "type": "quantitative", "title": "Rank" }
                        ]
                    }
                };

                vegaEmbed(`#chart-${yearData.year}`, vlSpec).then(() => {
                    if (index !== 0) {
                        chartDiv.style.display = 'none';
                    }
                }).catch(err => console.error(err));
            });

            const slider = document.getElementById('yearSlider');
            const currentYearDisplay = document.getElementById('currentYear');

            let currentYearIndex = 0;
            const targetYearIndex = yearsData.findIndex(y => y.year === 2018);
            let intervalId = null;

            function showChartForYear(yearIndex) {
                currentYearDisplay.textContent = `Year: ${yearsData[yearIndex].year}`;
                const allCharts = document.querySelectorAll('.chart');
                allCharts.forEach(chart => chart.style.display = 'none');
                document.getElementById(`chart-${yearsData[yearIndex].year}`).style.display = 'block';
            }

            function startAnimation() {
                intervalId = setInterval(() => {
                    showChartForYear(currentYearIndex);
                    slider.value = currentYearIndex;
                    if (currentYearIndex >= targetYearIndex) {
                        clearInterval(intervalId);
                    } else {
                        currentYearIndex++;
                    }
                }, 300); 
            }

            slider.addEventListener('input', function () {
                clearInterval(intervalId); 
                currentYearIndex = parseInt(this.value);
                showChartForYear(currentYearIndex);
            });

            slider.setAttribute('min', 0);
            slider.setAttribute('max', yearsData.length - 1);
            slider.setAttribute('step', 1);

            const observer = new IntersectionObserver(entries => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        startAnimation();
                        observer.unobserve(slideshowContainer);
                    }
                });
            });

            observer.observe(slideshowContainer);

            // Add year ticks to slider
            const ticksContainer = document.querySelector('.slider-ticks');
            yearsData.forEach((yearData, index) => {
                const tick = document.createElement('div');
                tick.classList.add('slider-tick');
                tick.style.left = `${(index / (yearsData.length - 1)) * 100}%`;
                tick.textContent = yearData.year;
                ticksContainer.appendChild(tick);
            });
        }

        loadBillboard100Charts();
    </script>
</body>
</html>
